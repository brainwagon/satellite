#!/usr/bin/env python

import sys
import argparse
import math
import ephem
from prettytable import PrettyTable as pt
from datetime import datetime
import urllib.request
import urllib.parse

#url = "https://celestrak.com/NORAD/elements/gp.php?NAME=Norbi"

def dt(f):
  return f.strftime("%m/%d/%Y %H:%M:%S")

def do_pass(name):
  url = "https://celestrak.com/NORAD/elements/gp.php?NAME={}".format(urllib.parse.quote_plus(name))
  with urllib.request.urlopen(url) as response:
    data = response.read().decode("utf-8").rstrip().split('\r\n')

  # Each query can return multiple satellites
  for i in range(0, len(data), 3):
    sat = ephem.readtle(data[i], data[i+1], data[i+2])
 
    obs = ephem.city("San Francisco")
    tb = pt()
    print(sat.name)
    tb.field_names = ["Rise Time", "Rise Azi", "Transit Time", "Altitude", "Set Time", "Set Azi"]
    for i in range(args.passes):
      info = obs.next_pass(sat)
      tb.add_row([dt(ephem.localtime(info[0])), 
              "{:5.1f}".format(math.degrees(info[1])),
              dt(ephem.localtime(info[2])),
              "{:5.1f}".format(math.degrees(info[3])),
              dt(ephem.localtime(info[4])),
              "{:5.1f}".format(math.degrees(info[5]))])
      obs.date = info[4] + ephem.minute
    print(tb)

p = argparse.ArgumentParser()
p.add_argument("-n", "--passes", type=int, default=3, help="number of passes to predict")
p.add_argument("SAT", nargs="*", default=["NORBI"], help="name off satellite")
args = p.parse_args()

for sat in args.SAT:
  do_pass(sat)
